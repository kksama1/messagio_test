services:
  postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: "kksama"
      POSTGRES_PASSWORD: "kksama1"
      POSTGRES_DB: "messagioDb"
    networks:
      - mynetwork
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data


  msgreciever:
      build:
        context: .
        dockerfile: cmd/msgReceiver/Dockerfile
      restart: always
      ports:
        - "8080:8080"
      networks:
        - mynetwork
      depends_on:
        - postgres

#  consumer:
#    build:
#      context: .
#      dockerfile: ./cmd/consumer/Dockerfile
#    restart: always
#    ports:
#      - "8081:8081"
#    networks:
#      - mynetwork
##    depends_on:
##      - msgreciever


  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    networks:
      - mynetwork

  kafka:
    image: confluentinc/cp-kafka:latest
    deploy:
      resources:
        limits:
          memory: 2G  # или больше, если это необходимо
    restart: always
    ports:
      - "9092:9092"
    expose:
      - "9093"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENERS: INSIDE://kafka:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
    networks:
      - mynetwork
    depends_on:
      - zookeeper

networks:
  mynetwork:
    driver: bridge

volumes:
  postgres_data: